<Type Name="DiagramNode" FullName="Microsoft.Office.Interop.Excel.DiagramNode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="596c9db6646e72359bb9061ca4c386cce081415b843e368dbe3a6cb3403fdabd" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54508601" /></Metadata><TypeSignature Language="C#" Value="public interface DiagramNode : Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract DiagramNode implements class Microsoft.Office.Core._IMsoDispObj" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.DiagramNode" />
  <TypeSignature Language="VB.NET" Value="Public Interface DiagramNode&#xA;Implements _IMsoDispObj" />
  <TypeSignature Language="C++ CLI" Value="public interface class DiagramNode : Microsoft::Office::Core::_IMsoDispObj" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Core._IMsoDispObj</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("000C0370-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4304)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un nodo de un diagrama.</summary>
    <remarks><para>Use el <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" /> método para agregar un nodo a un diagrama o a un nodo de diagrama.</para>
      <para>Use el <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.Delete" /> método para quitar un nodo de un diagrama o nodo de diagrama.</para>
      <para>Para devolver un <b>objeto DiagramNode,</b> use una de las siguientes opciones:</para>
      <list type="bullet">
        <item>
          <description>Métodos o métodos del objeto <b>DiagramNode,</b> <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" /> , o su <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.CloneNode(System.Boolean,Microsoft.Office.Interop.Excel.DiagramNode,Microsoft.Office.Core.MsoRelativeNodePosition)" /> <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.NextNode" /> <see cref="M:Microsoft.Office.Interop.Excel.DiagramNode.PrevNode" /> <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Root" /> propiedad</description>
        </item>
        <item>
          <description>Propiedades <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodeChildren" /> o métodos <see cref="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.AddNode(System.Object,Microsoft.Office.Core.MsoDiagramNodeType)" /> de la <see cref="M:Microsoft.Office.Interop.Excel.DiagramNodeChildren.Item(System.Object)" /> <see cref="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.FirstChild" /> <see cref="P:Microsoft.Office.Interop.Excel.DiagramNodeChildren.LastChild" /> colección</description>
        </item>
        <item>
          <description>Método <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodes" /> de la <see cref="M:Microsoft.Office.Interop.Excel.DiagramNodes.Item(System.Object)" /> colección</description>
        </item>
        <item>
          <description>Propiedad <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> <see cref="T:Microsoft.Office.Interop.Excel.ShapeRange" /> <b>DiagramNode</b> del objeto o colección</description>
        </item>
      </list>
      <para>Un nodo de diagrama puede finalizar o puede contener otros diagramas secundarios, nodos de diagrama secundario o formas secundarias. Haga referencia a estos con lo siguiente:</para>
      <list type="bullet">
        <item>
          <description>Para hacer referencia a un diagrama secundario, use la <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Diagram" /> propiedad.</description>
        </item>
        <item>
          <description>Para hacer referencia a un nodo de diagrama secundario individual, use los <b>métodos AddNode</b>, <b>CloneNode</b>, <b>NextNode</b> o <b>PrevNode</b> o la <b>propiedad Root.</b></description>
        </item>
        <item>
          <description>Para hacer referencia a una colección de nodos de diagrama secundario, use la <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Children" /> propiedad.</description>
        </item>
        <item>
          <description>Para hacer referencia a una forma, use las <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.Shape" /> propiedades <see cref="P:Microsoft.Office.Interop.Excel.DiagramNode.TextShape" /> or.</description>
        </item>
      </list>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="AddNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode AddNode (Microsoft.Office.Core.MsoRelativeNodePosition pos = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode, Microsoft.Office.Core.MsoDiagramNodeType nodeType = Microsoft.Office.Core.MsoDiagramNodeType.msoDiagramNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.DiagramNode AddNode([in]valuetype Microsoft.Office.Core.MsoRelativeNodePosition pos, [in]valuetype Microsoft.Office.Core.MsoDiagramNodeType nodeType) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.AddNode(Microsoft.Office.Core.MsoRelativeNodePosition,Microsoft.Office.Core.MsoDiagramNodeType)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNode (Optional pos As MsoRelativeNodePosition = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode, Optional nodeType As MsoDiagramNodeType = Microsoft.Office.Core.MsoDiagramNodeType.msoDiagramNode) As DiagramNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(10)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="Microsoft.Office.Core.MsoRelativeNodePosition" />
        <Parameter Name="nodeType" Type="Microsoft.Office.Core.MsoDiagramNodeType" />
      </Parameters>
      <Docs>
        <param name="pos">Opcional <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" /> . Donde se agregará el nodo, en relación con otro nodo. <b>MsoRelativeNodePosition</b> puede ser una de estas constantes:<b>msoAfterLastSibling</b><b>msoAfterNode </b>Default<b>msoBeforeFirstSibling</b><b>msoBeforeNode</b></param>
        <param name="nodeType">Opcional <see cref="T:Microsoft.Office.Interop.Office.MsoDiagramNodeType" /> . Tipo de nodo. Puede ser una de estas constantes <b>MsoDiagramNodeType:</b> <b>msoDiagramAssistant</b><b>msoDiagramNode</b> Default</param>
        <summary>Crea un nodo de diagrama. Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> objeto que representa el nuevo nodo.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public object Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Application { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Application</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743808)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto que representa la Microsoft Excel aplicación.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Children">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNodeChildren Children { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DiagramNodeChildren Children" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Children" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Children As DiagramNodeChildren" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DiagramNodeChildren ^ Children { Microsoft::Office::Interop::Excel::DiagramNodeChildren ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(101)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNodeChildren</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.DiagramNodeChildren" /> objeto que representa la colección de nodos secundarios de un nodo determinado.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode CloneNode (bool copyChildren, Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, Microsoft.Office.Core.MsoRelativeNodePosition pos = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.DiagramNode CloneNode([in]bool copyChildren, [in]class Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, [in]valuetype Microsoft.Office.Core.MsoRelativeNodePosition pos) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.CloneNode(System.Boolean,Microsoft.Office.Interop.Excel.DiagramNode,Microsoft.Office.Core.MsoRelativeNodePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneNode (copyChildren As Boolean, pTargetNode As DiagramNode, Optional pos As MsoRelativeNodePosition = Microsoft.Office.Core.MsoRelativeNodePosition.msoAfterNode) As DiagramNode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(15)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copyChildren" Type="System.Boolean" />
        <Parameter Name="pTargetNode" Type="Microsoft.Office.Interop.Excel.DiagramNode" />
        <Parameter Name="pos" Type="Microsoft.Office.Core.MsoRelativeNodePosition" />
      </Parameters>
      <Docs>
        <param name="copyChildren"><b>Boolean</b> obligatorio. <b>True</b> para clonar también los secundarios del nodo de diagrama.</param>
        <param name="pTargetNode">Objeto <b>DiagramNode</b> requerido. Expresión que devuelve un <b>objeto DiagramNode</b> que representa el nodo donde se colocará el nuevo nodo.</param>
        <param name="pos">Opcional <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" /> . Si se especifica, indica dónde se agregará <paramref name="pTargetNode" /> el nodo en relación con <paramref name="pTargetNode" /> .<b> MsoRelativeNodePosition</b> puede ser una de estas constantes:<b>msoAfterLastSibling</b><b>msoAfterNode </b>Default<b>msoBeforeFirstSibling</b><b>msoBeforeNode</b></param>
        <summary>Clona un nodo de diagrama. Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> objeto que representa el nodo clonado.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public int Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Creator { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Core._IMsoDispObj.Creator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1610743809)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un entero de 32 bits que indica la aplicación con la que se creó el objeto.</summary>
        <value>To be added.</value>
        <remarks><para>Si el objeto se creó en Microsoft Excel, la propiedad devuelve la cadena XCEL, que es el equivalente del número hexadecimal 5843454C.</para>
          <para>La propiedad <b>Creator</b> está diseñada para su uso en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres. Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Elimina el objeto.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Diagram">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.IMsoDiagram Diagram { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Core.IMsoDiagram Diagram" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Diagram" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Diagram As IMsoDiagram" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::IMsoDiagram ^ Diagram { Microsoft::Office::Core::IMsoDiagram ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(104)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.IMsoDiagram</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Diagram" /> objeto que representa un diagrama.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoOrgChartLayoutType Layout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoOrgChartLayoutType Layout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Layout" />
      <MemberSignature Language="VB.NET" Value="Public Property Layout As MsoOrgChartLayoutType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoOrgChartLayoutType Layout { Microsoft::Office::Core::MsoOrgChartLayoutType get(); void set(Microsoft::Office::Core::MsoOrgChartLayoutType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(105)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoOrgChartLayoutType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve o establece una constante para indicar el formato de los nodos secundarios de un organigrama.</summary>
        <value>To be added.</value>
        <remarks><para>
            <b>MsoOrgChartLayoutType</b> puede ser una de estas constantes <b>MsoOrgChartLayoutType.</b></para>
          <para>
            <b>msoOrgChartLayoutAssistant</b> Coloca los nodos secundarios como asistentes.</para>
          <para>
            <b>msoOrgChartLayoutBothHanging</b> Coloca los nodos secundarios verticalmente desde el nodo primario en el lado izquierdo y derecho.</para>
          <para>
            <b>msoOrgChartLayoutLeftHanging</b> Coloca los nodos secundarios verticalmente desde el nodo primario en el lado izquierdo.</para>
          <para>
            <b>msoOrgChartLayoutMixed</b> Valor devuelto para un nodo primario con formato secundario con más de un <b>MsoOrgChartLayoutType</b>.</para>
          <para>
            <b>msoOrgChartLayoutRightHanging</b> Coloca los nodos secundarios verticalmente desde el nodo primario en el lado derecho.</para>
          <para>
            <b>msoOrgChartLayoutStandard</b> Coloca los nodos secundarios horizontalmente debajo del nodo primario.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNode">
      <MemberSignature Language="C#" Value="public void MoveNode (Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, Microsoft.Office.Core.MsoRelativeNodePosition pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveNode([in]class Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, [in]valuetype Microsoft.Office.Core.MsoRelativeNodePosition pos) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.MoveNode(Microsoft.Office.Interop.Excel.DiagramNode,Microsoft.Office.Core.MsoRelativeNodePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveNode (pTargetNode As DiagramNode, pos As MsoRelativeNodePosition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveNode(Microsoft::Office::Interop::Excel::DiagramNode ^ pTargetNode, Microsoft::Office::Core::MsoRelativeNodePosition pos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(12)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTargetNode" Type="Microsoft.Office.Interop.Excel.DiagramNode" />
        <Parameter Name="pos" Type="Microsoft.Office.Core.MsoRelativeNodePosition" />
      </Parameters>
      <Docs>
        <param name="pTargetNode">Objeto <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> obligatorio. Nodo de diagrama en el que se desplazará el nodo especificado.</param>
        <param name="pos">Obligatorio <see cref="T:Microsoft.Office.Interop.Office.MsoRelativeNodePosiiton" /> . Posición para mover el nodo, en relación con <paramref name="TargetNode" /> .<b> MsoRelativeNodePosition</b> puede ser una de estas constantes:<b>msoAfterLastSibling</b><b>msoAfterNode</b><b>msoBeforeFirstSibling</b><b>msoBeforeNode</b></param>
        <summary>Mueve un nodo de diagrama y cualquiera de sus nodos secundarios dentro de un diagrama.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode NextNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.DiagramNode NextNode() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.NextNode" />
      <MemberSignature Language="VB.NET" Value="Public Function NextNode () As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::DiagramNode ^ NextNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Selecciona el siguiente nodo de diagrama en una serie de nodos. Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> objeto que representa el nodo recién seleccionado.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(100)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve el objeto primario del objeto especificado.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrevNode">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode PrevNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Office.Interop.Excel.DiagramNode PrevNode() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.PrevNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PrevNode () As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Office::Interop::Excel::DiagramNode ^ PrevNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> objeto que representa el nodo de diagrama anterior en una colección de nodos de diagrama.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceNode">
      <MemberSignature Language="C#" Value="public void ReplaceNode (Microsoft.Office.Interop.Excel.DiagramNode pTargetNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceNode([in]class Microsoft.Office.Interop.Excel.DiagramNode pTargetNode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.ReplaceNode(Microsoft.Office.Interop.Excel.DiagramNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReplaceNode (pTargetNode As DiagramNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReplaceNode(Microsoft::Office::Interop::Excel::DiagramNode ^ pTargetNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTargetNode" Type="Microsoft.Office.Interop.Excel.DiagramNode" />
      </Parameters>
      <Docs>
        <param name="pTargetNode">Objeto <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> obligatorio. Nodo de diagrama de destino que se va a reemplazar.</param>
        <summary>Reemplaza un nodo de diagrama de destino por el nodo de diagrama de origen.</summary>
        <remarks><para>El nodo de diagrama de destino se elimina y el nodo de diagrama de origen, incluidos los nodos secundarios, se mueven a donde estaba el nodo de diagrama de destino.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.DiagramNode Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.DiagramNode Root" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Root" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Root As DiagramNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::DiagramNode ^ Root { Microsoft::Office::Interop::Excel::DiagramNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(103)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.DiagramNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve el objeto <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> raíz al que pertenece el nodo de diagrama raíz.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape Shape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape Shape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.Shape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Shape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ Shape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(102)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objeto que representa la forma adjunta al nodo de diagrama especificado</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SwapNode">
      <MemberSignature Language="C#" Value="public void SwapNode (Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, bool swapChildren = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SwapNode([in]class Microsoft.Office.Interop.Excel.DiagramNode pTargetNode, [in]bool swapChildren) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.SwapNode(Microsoft.Office.Interop.Excel.DiagramNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SwapNode (pTargetNode As DiagramNode, Optional swapChildren As Boolean = false)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pTargetNode" Type="Microsoft.Office.Interop.Excel.DiagramNode" />
        <Parameter Name="swapChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pTargetNode">Objeto <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> obligatorio. Nodo de diagrama de destino que se va a reemplazar.</param>
        <param name="swapChildren"><b>Boolean</b> opcional. Los nodos secundarios del destino y los nodos de origen que se intercambian. Los nodos de diagrama secundario se mueven junto con sus nodos raíz correspondientes. El valor <b>predeterminado es True</b>, que intercambia los nodos secundarios.</param>
        <summary>Intercambia el nodo de diagrama de origen con un nodo de diagrama de destino.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape TextShape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape TextShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.DiagramNode.TextShape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextShape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ TextShape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(106)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objeto que representa la forma del cuadro de texto asociado a un nodo de diagrama.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferChildren">
      <MemberSignature Language="C#" Value="public void TransferChildren (Microsoft.Office.Interop.Excel.DiagramNode pReceivingNode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferChildren([in]class Microsoft.Office.Interop.Excel.DiagramNode pReceivingNode) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.DiagramNode.TransferChildren(Microsoft.Office.Interop.Excel.DiagramNode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub TransferChildren (pReceivingNode As DiagramNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void TransferChildren(Microsoft::Office::Interop::Excel::DiagramNode ^ pReceivingNode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(16)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pReceivingNode" Type="Microsoft.Office.Interop.Excel.DiagramNode" />
      </Parameters>
      <Docs>
        <param name="pReceivingNode">Objeto <see cref="T:Microsoft.Office.Interop.Excel.DiagramNode" /> obligatorio. Nodo de diagrama que recibe los nodos secundarios que se transfieren desde el nodo especificado.</param>
        <summary>Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> objeto que representa la forma del cuadro de texto asociado a un nodo de diagrama.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>