<Type Name="ConnectorFormat" FullName="Microsoft.Office.Interop.Excel.ConnectorFormat">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e283043a88fbcde2990f89395c6426ec95d6105b056ebecbf1ca27a181d3d877" /><Meta Name="ms.sourcegitcommit" Value="daf501296516d104cf396246ac0d336adfeffd0d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/06/2021" /><Meta Name="ms.locfileid" Value="54508720" /></Metadata><TypeSignature Language="C#" Value="public interface ConnectorFormat" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ConnectorFormat" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.Excel.ConnectorFormat" />
  <TypeSignature Language="VB.NET" Value="Public Interface ConnectorFormat" />
  <TypeSignature Language="C++ CLI" Value="public interface class ConnectorFormat" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0002443E-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(2)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4096)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contiene propiedades y métodos aplicables a conectores.</summary>
    <remarks><para>Un conector es una línea que une dos formas por unos puntos denominados sitios de conexión. Si se reorganizan las formas que están conectadas, la geometría del conector se ajusta automáticamente para que las formas permanezcan conectadas.</para>
      <para>Utilice la <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectorFormat" /> propiedad para devolver un objeto <b>ConnectorFormat.</b> Use los <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> métodos and <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> para adjuntar los extremos del conector a otras formas del documento. Use el método para buscar automáticamente la ruta de acceso <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> más corta entre las dos formas conectadas por el conector. Use la <see cref="P:Microsoft.Office.Interop.Excel.Shape.Connector" /> propiedad para ver si una forma es un conector.</para>
      <para>Tenga en cuenta que asigna un tamaño y una posición al agregar un conector a la colección, pero el tamaño y la posición se ajustan automáticamente al adjuntar el principio y el final del conector a otras formas de la <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> colección. Por lo tanto, si desea unir un conector a otras formas, el tamaño inicial y la posición que se especifique son irrelevantes. Del mismo modo, se especifican los sitios de conexión de una forma a unir el conector cuando lo, pero utiliza el método <b>RerouteConnections</b> después el conector puede cambiar los sitios de conexión se une el conector, haciendo que su opción original de los sitios de conexión sea irrelevante.</para>
      <para>Los lugares de conexión suelen enumerarse según las normas que se muestran en la siguiente tabla.</para>
      <list type="table">
        <item>
          <term>Autoformas, WordArt, imágenes y objetos OLE</term>
          <description>La numeración de los lugares de conexión comienza desde arriba y continúa en sentido contrario a las agujas del reloj.</description>
        </item>
        <item>
          <term>Formas libres</term>
          <description>Los lugares de conexión son los vértices y se corresponden con los números de vértice.</description>
        </item>
      </list>
      <para> </para></remarks>
  </Docs>
  <Members>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Application Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Application Application" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Application" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Application As Application" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Application ^ Application { Microsoft::Office::Interop::Excel::Application ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(148)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Application</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Office.Interop.Excel.Application" /> objeto que representa la Microsoft Excel aplicación.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public void BeginConnect (Microsoft.Office.Interop.Excel.Shape ConnectedShape, int ConnectionSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginConnect([in]class Microsoft.Office.Interop.Excel.Shape ConnectedShape, [in]int32 ConnectionSite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginConnect (ConnectedShape As Shape, ConnectionSite As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginConnect(Microsoft::Office::Interop::Excel::Shape ^ ConnectedShape, int ConnectionSite);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1750)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConnectedShape" Type="Microsoft.Office.Interop.Excel.Shape" />
        <Parameter Name="ConnectionSite" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ConnectedShape">Objeto <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> obligatorio. Para unir el principio del conector a la forma. El objeto <b>Shape especificado</b> debe estar en la misma colección que el <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> conector.</param>
        <param name="ConnectionSite">Required <b>Integer</b>. Un sitio de conexión en la forma especificada por <paramref name="ConnectedShape" /> . Debe ser un entero entre 1 y el entero devuelto por la <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> propiedad de la forma especificada. Si desea que el conector encuentre automáticamente la ruta de acceso más corta entre las dos formas que conecta, especifique cualquier entero válido para este argumento y, a continuación, use el método después de que el conector esté unido a formas en ambos <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> extremos.</param>
        <summary>Une el principio del conector especificado a una forma determinada.</summary>
        <remarks><para>Si ya existe una conexión entre el principio del conector y otra forma, esta conexión se rompe. Si el principio del conector no está aún situado en el sitio de conexión especificado, este método mueve el principio del conector al sitio de conexión y ajusta el tamaño y la posición del conector. Use el <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> método para adjuntar el final del conector a una forma.</para>
          <para>Cuando se une un conector a un objeto, el tamaño y la posición del conector se ajustan automáticamente, si es necesario.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnected">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState BeginConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState BeginConnected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginConnected As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState BeginConnected { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1756)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1756)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>True</b> si el principio del conector especificado está conectado a una forma.</summary>
        <value>To be added.</value>
        <remarks><para>
            <see cref="T:Microsoft.Office.Core.MsoTriState" />puede ser una de las siguientes constantes <b>MsoTriState:</b></para>
          <para>
            <b>msoCTrue</b>
          </para>
          <para>
            <b>msoFalse</b>
          </para>
          <para>
            <b>msoTriStateMixed</b>
          </para>
          <para>
            <b>msoTriStateToggle</b>
          </para>
          <para>
            <b>msoTrue</b> El principio del conector especificado está conectado a una forma.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnectedShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape BeginConnectedShape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape BeginConnectedShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectedShape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginConnectedShape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ BeginConnectedShape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1757)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1757)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un objeto que representa la forma a la que se adjunta el principio del <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> conector especificado.</summary>
        <value>To be added.</value>
        <remarks><para>Si el principio del conector especificado no está unido a una forma, esta propiedad genera un error.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginConnectionSite">
      <MemberSignature Language="C#" Value="public int BeginConnectionSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BeginConnectionSite" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnectionSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginConnectionSite As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BeginConnectionSite { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1758)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1758)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un entero que especifica el sitio de conexión al que está unido el final del conector.</summary>
        <value>To be added.</value>
        <remarks><para>Si el final del conector especificado no está unido a una forma, esta propiedad genera un error.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDisconnect">
      <MemberSignature Language="C#" Value="public void BeginDisconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginDisconnect() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginDisconnect" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginDisconnect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginDisconnect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1753)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Separa el principio del conector especificado de la forma a la que se une.</summary>
        <remarks><para>El <b>método BeginDisconnect</b> no modifica el tamaño ni la posición del conector. El principio del conector permanece posicionado en un sitio de conexión, pero ya no está conectado. Use el <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndDisconnect" /> método para desasoyar el final del conector de una forma.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.XlCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Interop.Excel.XlCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Creator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Creator As XlCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::XlCreator Creator { Microsoft::Office::Interop::Excel::XlCreator get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(149)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.XlCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un entero de 32 bits que indica la aplicación con la que se creó el objeto.</summary>
        <value>To be added.</value>
        <remarks><para>Si el objeto se creó en Microsoft Excel, la propiedad devuelve la cadena XCEL, que es el equivalente del número hexadecimal 5843454C.</para>
          <para>La propiedad <b>Creator</b> está diseñada para su uso en Microsoft Excel para Macintosh, donde cada aplicación tiene un código de creador de cuatro caracteres. Por ejemplo, Microsoft Excel tiene el código de creador XCEL.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (Microsoft.Office.Interop.Excel.Shape ConnectedShape, int ConnectionSite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndConnect([in]class Microsoft.Office.Interop.Excel.Shape ConnectedShape, [in]int32 ConnectionSite) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (ConnectedShape As Shape, ConnectionSite As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(Microsoft::Office::Interop::Excel::Shape ^ ConnectedShape, int ConnectionSite);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1754)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ConnectedShape" Type="Microsoft.Office.Interop.Excel.Shape" />
        <Parameter Name="ConnectionSite" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ConnectedShape">Objeto <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> obligatorio. Para unir el final del conector a la forma. El objeto <b>Shape especificado</b> debe estar en la misma colección que el <see cref="T:Microsoft.Office.Interop.Excel.Shapes" /> conector.</param>
        <param name="ConnectionSite">Required <b>Integer</b>. Un sitio de conexión en la forma especificada por <paramref name="ConnectedShape" /> . Debe ser un entero entre 1 y el entero devuelto por la <see cref="P:Microsoft.Office.Interop.Excel.Shape.ConnectionSiteCount" /> propiedad de la forma especificada. Si desea que el conector encuentre automáticamente la ruta de acceso más corta entre las dos formas que conecta, especifique cualquier entero válido para este argumento y, a continuación, use el método después de que el conector esté unido a formas en ambos <see cref="M:Microsoft.Office.Interop.Excel.Shape.RerouteConnections" /> extremos.</param>
        <summary>Une el final del conector especificado a una forma especificada.</summary>
        <remarks><para>Si ya existe una conexión entre el final del conector y otra forma, esta conexión se rompe. Si el final del conector no está aún ubicado en el sitio de conexión especificado, este método mueve el final del conector al sitio de conexión y ajusta el tamaño y la posición del conector. Use el <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginConnect(Microsoft.Office.Interop.Excel.Shape,System.Int32)" /> método para adjuntar el principio del conector a una forma.</para>
          <para>Cuando se une un conector a un objeto, el tamaño y la posición del conector se ajustan automáticamente, si es necesario.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnected">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoTriState EndConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoTriState EndConnected" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndConnected As MsoTriState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoTriState EndConnected { Microsoft::Office::Core::MsoTriState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1759)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1759)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoTriState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><b>msoTrue</b> si el final del conector especificado está conectado a una forma.</summary>
        <value>To be added.</value>
        <remarks><para>
            <see cref="T:Microsoft.Office.Core.MsoTriState" />puede ser una de las siguientes constantes <b>MsoTriState:</b></para>
          <para>
            <b>msoFalse</b> El final del conector especificado no está conectado a una forma.</para>
          <para>
            <b>msoTrue</b> El final del conector especificado está conectado a una forma.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnectedShape">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.Excel.Shape EndConnectedShape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.Excel.Shape EndConnectedShape" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectedShape" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndConnectedShape As Shape" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::Excel::Shape ^ EndConnectedShape { Microsoft::Office::Interop::Excel::Shape ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1760)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1760)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.Excel.Shape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un objeto que representa la forma a la que está unido el final <see cref="T:Microsoft.Office.Interop.Excel.Shape" /> del conector especificado.</summary>
        <value>To be added.</value>
        <remarks><para>Si el final del conector especificado no está unido a una forma, esta propiedad genera un error.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EndConnectionSite">
      <MemberSignature Language="C#" Value="public int EndConnectionSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EndConnectionSite" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.EndConnectionSite" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndConnectionSite As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EndConnectionSite { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1761)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1761)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un entero que especifica el sitio de conexión al que está unido el final del conector.</summary>
        <value>To be added.</value>
        <remarks><para>Si el final del conector especificado no está unido a una forma, esta propiedad genera un error.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDisconnect">
      <MemberSignature Language="C#" Value="public void EndDisconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDisconnect() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.Excel.ConnectorFormat.EndDisconnect" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndDisconnect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndDisconnect();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1755)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Separa el final del conector especificado de la forma a la que se une.</summary>
        <remarks><para>Este método no modifica el tamaño ni la posición del conector; el final del conector permanece posicionado en un sitio de conexión, pero ya no está conectado. Use el <see cref="M:Microsoft.Office.Interop.Excel.ConnectorFormat.BeginDisconnect" /> método para desasoyar el principio del conector de una forma.</para>
          <para> </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public object Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parent" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(150)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve el objeto primario del objeto especificado.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Core.MsoConnectorType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Office.Core.MsoConnectorType Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.Excel.ConnectorFormat.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As MsoConnectorType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Core::MsoConnectorType Type { Microsoft::Office::Core::MsoConnectorType get(); void set(Microsoft::Office::Core::MsoConnectorType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.Excel</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(108)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Core.MsoConnectorType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve o establece el tipo de formato del conector.</summary>
        <value>To be added.</value>
        <remarks><para>
            <see cref="T:Microsoft.Office.Core.MsoConnectorType" />puede ser una de las siguientes <b>constantes MsoConnectorType:</b></para>
          <para>
            <b>msoConnectorCurve</b>
          </para>
          <para>
            <b>msoConnectorElbow</b>
          </para>
          <para>
            <b>msoConnectorStraight</b>
          </para>
          <para>
            <b>msoConnectorTypeMixed</b>
          </para>
          <para> </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>